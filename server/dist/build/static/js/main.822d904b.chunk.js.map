{"version":3,"sources":["service.ts","Landing.tsx","components/Captains.tsx","League.tsx","App.tsx","theme.ts","index.tsx"],"names":["baseUrl","getBssData","a","axios","get","getLeague","params","post","Landing","leagueId","setleagueId","selectedGW","setleague","setselectedGW","gws","fetchLeague","gw","undefined","toString","leagueRequest","console","log","status","league","data","sx","my","style","display","marginTop","src","alt","margin","maxWidth","flexDirection","alignItems","Typography","component","variant","FormControl","width","TextField","fullWidth","id","label","name","onChange","e","target","value","InputLabel","Select","labelId","map","MenuItem","Button","onClick","Captains","bssData","Card","borderRadius","CardContent","TableContainer","Table","TableHead","TableRow","TableCell","Array","from","Set","teams","team","picks","find","pick","is_captain","obj","element","c","n","managers","filter","p","m","player_name","player","elements","first_name","web_name","captainedBy","playerObject","join","length","League","navStyles","navLinks","icon","text","Grid","container","justifyContent","item","xs","marginBlock","maxHeight","md","sm","direction","marginX","position","bottom","left","right","backgroundColor","color","height","Box","getGWs","events","finished","dd_diff","Date","deadline_time","push","reverse","App","useState","setbssData","setgws","useEffect","bssRequest","filteredGWs","alert","fetchBssData","Container","theme","createTheme","palette","mode","background","default","paper","primary","main","secondary","error","red","A400","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"qWAAMA,EACkE,OAI3DC,EAAU,uCAAG,sBAAAC,EAAA,sEACXC,IAAMC,IAAN,UAAaJ,EAAb,UADW,mFAAH,qDAIVK,EAAS,uCAAG,WAAOC,GAAP,SAAAJ,EAAA,sEACVC,IAAMI,KAAN,UAAcP,EAAd,WAAgCM,GADtB,mFAAH,sD,OCgHPE,EA9FyB,SAAC,GAOlC,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAC,EACI,EADJA,IAEMC,EAAW,uCAAG,WAAOC,EAAYP,GAAnB,mBAAAP,EAAA,8DAERe,GAAND,EAFc,oDAGbP,EAHa,wDAIZH,EAA0B,CAAEU,GAAIA,EAAGE,WAAYT,YAJnC,SAKUJ,EAAUC,GALpB,OAKZa,EALY,OAMlBC,QAAQC,IAAI,iBAAkBF,GACF,KAAxBA,EAAcG,SACVC,EAAqBJ,EAAcK,KACzCZ,EAAUW,IATM,4CAAH,wDAajB,OACE,qCACE,cAAC,IAAD,CAAKE,GAAI,CAAEC,GAAI,GAAKC,MAAO,CAAEC,QAAS,OAAQC,UAAW,OAAzD,SACE,qBACEC,IAAI,cACJC,IAAI,OACJJ,MAAO,CAAEK,OAAQ,OAAQC,SAAU,WAGvC,eAAC,IAAD,CACER,GAAI,CAAEC,GAAI,GACVC,MAAO,CACLC,QAAS,OACTM,cAAe,SACfC,WAAY,UALhB,UAQE,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,mBAsBA,cAACC,EAAA,EAAD,CAAaP,OAAO,SAASM,QAAQ,SAASX,MAAO,CAAEa,MAAO,KAA9D,SACE,cAACC,EAAA,EAAD,CACEH,QAAQ,WACRI,WAAS,EACTC,GAAG,WACHC,MAAM,YACNC,KAAK,WACLC,SAAU,SAACC,GAAD,OAAOrC,EAAYqC,EAAEC,OAAOC,YAG1C,eAACV,EAAA,EAAD,CAAaP,OAAO,SAASM,QAAQ,WAAWX,MAAO,CAAEa,MAAO,KAAhE,UACE,cAACU,EAAA,EAAD,CAAYP,GAAG,KAAf,sBACA,cAACQ,EAAA,EAAD,CACEC,QAAQ,KACRT,GAAG,KACHC,MAAM,WACNK,MAAOtC,EACPmC,SAAU,SAACC,GAAD,OAAOlC,EAAckC,EAAEC,OAAOC,QAL1C,SAOGnC,EAAIuC,KAAI,SAACrC,GACR,OACE,eAACsC,EAAA,EAAD,CAAsBL,MAAOjC,EAAG2B,GAAhC,UACG,IACA3B,EAAG2B,GAAI,MAFK3B,EAAG2B,YAQ1B,cAACY,EAAA,EAAD,CAAQC,QAAS,kBAAMzC,EAAYJ,EAAYF,IAA/C,uB,4ICrCOgD,EAxD2B,SAAC,GAOpC,IANLC,EAMI,EANJA,QACAnC,EAKI,EALJA,OAKI,EAJJd,SAII,EAHJE,WAGI,EAFJE,cAEI,EADJC,IAGA,GADAM,QAAQC,IAAI,aACPqC,IAAYnC,EAAQ,OAAO,KAsBhC,OACE,cAACoC,EAAA,EAAD,CAAMrB,QAAQ,YAAYX,MAAO,CAAEiC,aAAc,OAAjD,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,qBA7BKC,MAAMC,KACrB,IAAIC,IACF9C,EAAO+C,MACJjB,KAAI,SAACkB,GAAD,OAAUA,EAAKA,KAAKC,MAAMC,MAAK,SAACC,GAAD,OAAUA,EAAKC,iBAClDtB,KAAI,SAACuB,GAAD,cAASA,QAAT,IAASA,OAAT,EAASA,EAAKC,aAEvBxB,KAAI,SAACyB,GAAD,YAAa7D,GAAL6D,EAAiB,EAAIA,KACEzB,KAAI,SAAC0B,GACxC,IAAMC,EAAWzD,EAAO+C,MACrBW,QAAO,SAACV,GAAD,OACNA,EAAKA,KAAKC,MAAMC,MAAK,SAACS,GAAD,OAAOA,EAAEP,YAAcO,EAAEL,SAAWE,QAE1D1B,KAAI,SAAC8B,GAAD,OAAOA,EAAEC,eAChB,MAAO,CACLC,OAAO,GAAD,OAAK3B,EAAQ4B,SAASP,GAAGQ,WAAzB,YAAuC7B,EAAQ4B,SAASP,GAAGS,UACjEC,YAAaT,MAiBQ3B,KAAI,SAACqC,GAAD,OACnB,eAACzB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYwB,EAAaL,SACzB,cAACnB,EAAA,EAAD,UAAYwB,EAAaD,YAAYE,KAAK,QAC1C,cAACzB,EAAA,EAAD,UAAYwB,EAAaD,YAAYG,WAHxBF,EAAaL,qBC4E3BQ,EA5HuB,SAAC,GAShC,IARLnC,EAQI,EARJA,QACAnC,EAOI,EAPJA,OACAd,EAMI,EANJA,SAEAE,GAII,EALJD,YAKI,EAJJC,YAEAE,GAEI,EAHJD,UAGI,EAFJC,eACAC,EACI,EADJA,IAEAM,QAAQC,IAAI,eAEZ,IAAMyE,EAAY,CAAE9D,OAAQ,QACtB+D,EAAW,CACf,CACEC,KAAM,cAAC,IAAD,CAAUrE,MAAOmE,IACvBG,KAAM,QAER,CACED,KAAM,cAAC,IAAD,CAAerE,MAAOmE,IAC5BG,KAAM,aAER,CACED,KAAM,cAAC,IAAD,CAAarE,MAAOmE,IAC1BG,KAAM,SAER,CACED,KAAM,cAAC,IAAD,CAAiBrE,MAAOmE,IAC9BG,KAAM,SAGV,OACE,qCACE,eAACC,EAAA,EAAD,CACEvE,MAAO,CACLE,UAAW,QAKbsE,WAAS,EAETC,eAAe,gBATjB,UAWE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG3E,MAAO,CAAEC,QAAS,QAApC,SACE,qBACEE,IAAI,cACJC,IAAI,OACJJ,MAAO,CAAE4E,YAAa,OAAQC,UAAW,MAAOvE,SAAU,WAG9D,cAACiE,EAAA,EAAD,CACEO,GAAI,EACJJ,MAAI,EACJF,WAAS,EACTvE,QAAS,CAAE6E,GAAI,UAAWC,GAAI,OAAQJ,GAAI,QAC1CK,UAAU,MACVP,eAAe,OANjB,SASGL,EAAS1C,KAAI,SAACuB,GAAD,OACZ,cAACsB,EAAA,EAAD,CAAqBG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAGF,eAAe,OAA1D,SACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACQ,UAAU,SAASP,eAAe,SAAvD,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACzE,QAAQ,OAAnB,SACGgD,EAAIoB,OAEP,cAACE,EAAA,EAAD,CAAMU,QAAQ,OAAOP,MAAI,EAAzB,SACGzB,EAAIqB,WANArB,EAAIqB,WAYnB,cAACC,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJG,GAAI,EACJL,eAAe,SACfzE,MAAO,CAAEC,QAAS,QALpB,SAOE,cAACQ,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,KACRX,MAAO,CAAE4E,YAAa,QAHxB,mBAKMhF,EAAOA,OAAOsB,KALpB,sBAKsClC,UAK1C,cAACuF,EAAA,EAAD,CACEC,WAAS,EACTC,eAAe,eACfxE,QAAS,CAAE6E,GAAI,QACfI,SAAS,WACTC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPrF,MAAO,CACLsF,gBAAiB,UACjBC,MAAO,UACPC,OAAQ,QAXZ,SAcGpB,EAAS1C,KAAI,SAACuB,GAAD,OACZ,eAACwC,EAAA,EAAD,CAAKvF,UAAU,OAAf,UACE,cAACuF,EAAA,EAAD,CAAKxF,QAAQ,OAAb,SAAqBgD,EAAIoB,OACzB,cAACoB,EAAA,EAAD,UAAMxC,EAAIqB,eAIhB,cAACmB,EAAA,EAAD,CAAKvF,UAAU,OAAf,SACE,cAAC,EAAD,CACEN,OAAQA,EACRT,IAAKA,EACL4C,QAASA,EACTjD,SAAUA,EACVE,WAAYA,EACZE,cAAeA,UChInBwG,EAAS,SAACC,GACd,IAD6C,EACzCxG,EAAMwG,EAAOrC,QAAO,SAAClC,GAAD,OAAOA,EAAEwE,YADY,cAG/BD,GAH+B,IAG7C,2BAAsB,CAAC,IAAdvE,EAAa,QAEdyE,EAAU,IAAIC,KAAS,IAAIA,KAAK1E,EAAE2E,gBACnC3E,EAAEwE,UAAYC,EAJP,MAKV1G,EAAI6G,KAAK5E,IAPgC,8BAU7C,OAAOjC,EAAI8G,WAGE,SAASC,IACtB,MAA8BC,qBAA9B,mBAAOpE,EAAP,KAAgBqE,EAAhB,KACA,EAAsBD,mBAA6B,IAAnD,mBAAOhH,EAAP,KAAYkH,EAAZ,KACA,EAAoCF,mBAAiB,GAArD,mBAAOnH,EAAP,KAAmBE,EAAnB,KACA,EAAgCiH,mBAAiB,IAAjD,mBAAOrH,EAAP,KAAiBC,EAAjB,KACA,EAA4BoH,mBAA4B,MAAxD,mBAAOvG,EAAP,KAAeX,EAAf,KAgBA,OAdAqH,qBAAU,YACU,uCAAG,gCAAA/H,EAAA,sEACMD,IADN,OAEM,MADnBiI,EADa,QAEJ5G,QACPE,EAAiB0G,EAAW1G,KAClCuG,EAAWvG,GACL2G,EAAcd,EAAO7F,EAAK8F,QAChCU,EAAOG,GACPtH,EAAcsH,EAAY,GAAGxF,KACxByF,MAAM,8BARM,2CAAH,qDAUlBC,KACC,IAGD,cAACC,EAAA,EAAD,CAAWrG,SAAS,KAApB,SACE,cAACmF,EAAA,EAAD,CACED,OAAO,QADT,SAIG5F,EACC,cAAC,EAAD,CACEA,OAAQA,EACRT,IAAKA,EACLF,UAAWA,EACX8C,QAASA,EACTjD,SAAUA,EACVC,YAAaA,EACbC,WAAYA,EACZE,cAAeA,IAGjB,cAAC,EAAD,CACEC,IAAKA,EACLF,UAAWA,EACX8C,QAASA,EACTjD,SAAUA,EACVC,YAAaA,EACbC,WAAYA,EACZE,cAAeA,Q,oBC5CZ0H,EApBDC,YAAY,CACxBC,QAAS,CAEPC,KAAM,OACNC,WAAY,CACVC,QAAS,UACTC,MAAO,WAETC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,SCbhBC,IAASC,OACP,eAACC,EAAA,EAAD,CAAef,MAAOA,EAAtB,UACE,cAACgB,EAAA,EAAD,IACA,cAAC1B,EAAD,OAEF2B,SAASC,cAAc,Y","file":"static/js/main.822d904b.chunk.js","sourcesContent":["const baseUrl =\n  process.env.NODE_ENV == \"development\" ? \"http://localhost:3636/api\" : \"/api\";\nimport axios from \"axios\";\nimport { LeagueFetchType } from \"./types/LeagueFetchType\";\n\nexport const getBssData = async () => {\n  return await axios.get(`${baseUrl}/data`);\n};\n\nexport const getLeague = async (params: LeagueFetchType) => {\n  return await axios.post(`${baseUrl}/league`, params);\n};\n","import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Box } from \"@material-ui/system\";\nimport axios from \"axios\";\nimport { LeagueFetchType } from \"./types/LeagueFetchType\";\nimport { DataType } from \"./types/data\";\nimport { LeagueType } from \"./types/league\";\nimport { getLeague } from \"./service\";\n\ninterface LandingProps {\n  bssData: DataType | undefined;\n  leagueId: string;\n  setleagueId: React.Dispatch<React.SetStateAction<string>>;\n  selectedGW: number;\n  setselectedGW: any;\n  gws: DataType[\"events\"];\n  setleague: React.Dispatch<React.SetStateAction<LeagueType | null>>;\n}\n\nconst Landing: React.FC<LandingProps> = ({\n  leagueId,\n  setleagueId,\n  selectedGW,\n  setleague,\n  setselectedGW,\n  gws,\n}) => {\n  const fetchLeague = async (gw: number, leagueId: string) => {\n    // 707422\n    if (gw == undefined) return;\n    if (!leagueId) return;\n    const params: LeagueFetchType = { gw: gw.toString(), leagueId };\n    const leagueRequest = await getLeague(params);\n    console.log(\"res leaguee : \", leagueRequest);\n    if (leagueRequest.status == 200) {\n      const league: LeagueType = leagueRequest.data;\n      setleague(league);\n    }\n  };\n\n  return (\n    <>\n      <Box sx={{ my: 4 }} style={{ display: \"flex\", marginTop: \"10%\" }}>\n        <img\n          src=\"logo512.png\"\n          alt=\"logo\"\n          style={{ margin: \"auto\", maxWidth: \"80%\" }}\n        />\n      </Box>\n      <Box\n        sx={{ my: 4 }}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          LIIGA\n        </Typography>\n        {/* <OutlinedInput\n          fullWidth\n          id=\"leagueId\"\n          label=\"League ID\"\n          name=\"leagueId\"\n          style={{ width: 300 }}\n          onChange={(e) => setleagueId(e.target.value)}\n        />\n        <Select\n          id=\"gw\"\n          value={selectedGW}\n          style={{ width: 300 }}\n          onChange={(e) => setselectedGW(e.target.value)}\n        >\n          {gws.map((gw) => {\n            return <MenuItem value={gw.id}> {gw.id} </MenuItem>;\n          })}\n        </Select> */}\n\n        <FormControl margin=\"normal\" variant=\"filled\" style={{ width: 300 }}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"leagueId\"\n            label=\"League ID\"\n            name=\"leagueId\"\n            onChange={(e) => setleagueId(e.target.value)}\n          />\n        </FormControl>\n        <FormControl margin=\"normal\" variant=\"outlined\" style={{ width: 300 }}>\n          <InputLabel id=\"gw\">Gameweek</InputLabel>\n          <Select\n            labelId=\"gw\"\n            id=\"gw\"\n            label=\"Gameweek\"\n            value={selectedGW}\n            onChange={(e) => setselectedGW(e.target.value)}\n          >\n            {gws.map((gw) => {\n              return (\n                <MenuItem key={gw.id} value={gw.id}>\n                  {\" \"}\n                  {gw.id}{\" \"}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <Button onClick={() => fetchLeague(selectedGW, leagueId)}>Go</Button>\n      </Box>\n    </>\n  );\n};\nexport default Landing;\n","import {\n  Card,\n  CardContent,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { DataType } from \"../types/data\";\nimport { LeagueType } from \"../types/league\";\n\ninterface CaptainsProps {\n  bssData: DataType | undefined;\n  leagueId: string;\n  selectedGW: number;\n  setselectedGW: any;\n  gws: DataType[\"events\"];\n  league: LeagueType;\n}\n\nconst Captains: React.FC<CaptainsProps> = ({\n  bssData,\n  league,\n  leagueId,\n  selectedGW,\n  setselectedGW,\n  gws,\n}) => {\n  console.log(\"captains\");\n  if (!bssData || !league) return null;\n  const parseCaptains = () => {\n    const captains = Array.from(\n      new Set(\n        league.teams\n          .map((team) => team.team.picks.find((pick) => pick.is_captain))\n          .map((obj) => obj?.element)\n      )\n    ).map((c) => (c == undefined ? 1 : c));\n    const captainsAndManagers = captains.map((n) => {\n      const managers = league.teams\n        .filter((team) =>\n          team.team.picks.find((p) => p.is_captain && p.element == n)\n        )\n        .map((m) => m.player_name);\n      return {\n        player: `${bssData.elements[n].first_name} ${bssData.elements[n].web_name}`,\n        captainedBy: managers,\n      };\n    });\n    return captainsAndManagers;\n  };\n  return (\n    <Card variant=\"elevation\" style={{ borderRadius: \"5px\" }}>\n      <CardContent>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Captain</TableCell>\n                <TableCell>Owners</TableCell>\n                <TableCell>#</TableCell>\n              </TableRow>\n            </TableHead>\n            {parseCaptains().map((playerObject) => (\n              <TableRow key={playerObject.player}>\n                <TableCell>{playerObject.player}</TableCell>\n                <TableCell>{playerObject.captainedBy.join(\", \")}</TableCell>\n                <TableCell>{playerObject.captainedBy.length}</TableCell>\n              </TableRow>\n            ))}\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  );\n};\nexport default Captains;\n","import { Box, Grid, Typography } from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { DataType } from \"./types/data\";\nimport { LeagueType } from \"./types/league\";\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport Captains from \"./components/Captains\";\n\ninterface LeagueProps {\n  bssData: DataType | undefined;\n  leagueId: string;\n  setleagueId: React.Dispatch<React.SetStateAction<string>>;\n  selectedGW: number;\n  setselectedGW: any;\n  gws: DataType[\"events\"];\n  setleague: React.Dispatch<React.SetStateAction<LeagueType | null>>;\n  league: LeagueType;\n}\nconst League: React.FC<LeagueProps> = ({\n  bssData,\n  league,\n  leagueId,\n  setleagueId,\n  selectedGW,\n  setleague,\n  setselectedGW,\n  gws,\n}) => {\n  console.log(\"LEAGUE PAGE\");\n\n  const navStyles = { margin: \"auto\" };\n  const navLinks = [\n    {\n      icon: <HomeIcon style={navStyles} />,\n      text: \"Main\",\n    },\n    {\n      icon: <SwapHorizIcon style={navStyles} />,\n      text: \"Transfers\",\n    },\n    {\n      icon: <ListAltIcon style={navStyles} />,\n      text: \"Table\",\n    },\n    {\n      icon: <InsertChartIcon style={navStyles} />,\n      text: \"Data\",\n    },\n  ];\n  return (\n    <>\n      <Grid\n        style={{\n          marginTop: \"15px\",\n          // border: \"2px solid green\",\n          // backgroundColor: \"#222b36\",\n          // color: \"#919eab\",\n        }}\n        container\n        // spacing={2}\n        justifyContent=\"space-between\"\n      >\n        <Grid item xs={2} style={{ display: \"flex\" }}>\n          <img\n            src=\"logo512.png\"\n            alt=\"logo\"\n            style={{ marginBlock: \"auto\", maxHeight: \"75%\", maxWidth: \"75%\" }}\n          />\n        </Grid>\n        <Grid\n          md={5}\n          item\n          container\n          display={{ md: \"inherit\", sm: \"none\", xs: \"none\" }}\n          direction=\"row\"\n          justifyContent=\"left\"\n          // style={{ border: \"1px solid black\" }}\n        >\n          {navLinks.map((obj) => (\n            <Grid key={obj.text} item container xs={3} justifyContent=\"left\">\n              <Grid item container direction=\"column\" justifyContent=\"center\">\n                <Grid item display=\"flex\">\n                  {obj.icon}\n                </Grid>\n                <Grid marginX=\"auto\" item>\n                  {obj.text}\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid\n          item\n          xs={10}\n          md={5}\n          justifyContent=\"center\"\n          style={{ display: \"flex\" }}\n        >\n          <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            style={{ marginBlock: \"auto\" }}\n          >\n            {`${league.league.name}, Gameweek ${selectedGW}`}\n          </Typography>\n        </Grid>\n      </Grid>\n      {/* YLÄPALKKI */}\n      <Grid\n        container\n        justifyContent=\"space-evenly\"\n        display={{ md: \"none\" }}\n        position=\"absolute\"\n        bottom={0}\n        left={0}\n        right={0}\n        style={{\n          backgroundColor: \"#222b36\",\n          color: \"#919eab\",\n          height: \"60px\",\n        }}\n      >\n        {navLinks.map((obj) => (\n          <Box marginTop=\"auto\">\n            <Box display=\"flex\">{obj.icon}</Box>\n            <Box>{obj.text}</Box>\n          </Box>\n        ))}\n      </Grid>\n      <Box marginTop=\"60px\">\n        <Captains\n          league={league}\n          gws={gws}\n          bssData={bssData}\n          leagueId={leagueId}\n          selectedGW={selectedGW}\n          setselectedGW={setselectedGW}\n        />\n      </Box>\n    </>\n  );\n};\nexport default League;\n","import { Box } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport { useEffect, useState } from \"react\";\nimport Landing from \"./Landing\";\nimport League from \"./League\";\nimport { getBssData } from \"./service\";\nimport { DataType } from \"./types/data\";\nimport { LeagueType } from \"./types/league\";\n\nconst getGWs = (events: DataType[\"events\"]) => {\n  let gws = events.filter((e) => e.finished);\n  const delay = 20 * 60 * 1000;\n  for (let e of events) {\n    // @ts-ignore\n    const dd_diff = new Date() - new Date(e.deadline_time);\n    if (!e.finished && dd_diff > delay) {\n      gws.push(e);\n    }\n  }\n  return gws.reverse();\n};\n\nexport default function App() {\n  const [bssData, setbssData] = useState<DataType>();\n  const [gws, setgws] = useState<DataType[\"events\"]>([]);\n  const [selectedGW, setselectedGW] = useState<number>(1);\n  const [leagueId, setleagueId] = useState<string>(\"\");\n  const [league, setleague] = useState<LeagueType | null>(null);\n\n  useEffect(() => {\n    const fetchBssData = async () => {\n      const bssRequest = await getBssData();\n      if (bssRequest.status == 200) {\n        const data: DataType = bssRequest.data;\n        setbssData(data);\n        const filteredGWs = getGWs(data.events);\n        setgws(filteredGWs);\n        setselectedGW(filteredGWs[0].id);\n      } else alert(\"The game is being updated.\");\n    };\n    fetchBssData();\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box\n        height=\"100vh\"\n        // style={{ border: \"2px solid yellow\" }}\n      >\n        {league ? (\n          <League\n            league={league}\n            gws={gws}\n            setleague={setleague}\n            bssData={bssData}\n            leagueId={leagueId}\n            setleagueId={setleagueId}\n            selectedGW={selectedGW}\n            setselectedGW={setselectedGW}\n          />\n        ) : (\n          <Landing\n            gws={gws}\n            setleague={setleague}\n            bssData={bssData}\n            leagueId={leagueId}\n            setleagueId={setleagueId}\n            selectedGW={selectedGW}\n            setselectedGW={setselectedGW}\n          />\n        )}\n      </Box>\n    </Container>\n  );\n}\n","import { createTheme } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    // type: \"dark\",\n    mode: \"dark\",\n    background: {\n      default: \"#171c24\",\n      paper: \"#222b36\",\n    },\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n","import CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}